// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url = "***"
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id      Int      @default(autoincrement()) @id
  role Role @default(USER)
  email   String   @unique
  password String?
  publicName    String?
  lichessID String?
  googleID String?
  facebookID String?
  boughtCourses Course[] @relation(references: [id])
  banned Boolean? @default(false)
  // posts   Post[]
  instructorProfile instructorProfile? 
}
model instructorProfile{
id Int @default(autoincrement()) @id
user User @relation(fields: [userID],references:[id])
userID Int
teacherName String?
title Title?
myCourses Course[]
paypalID String?
bitcoinAdress String?
income Int?
}

model Course {
id Int @default(autoincrement()) @id
name String? @default("My new course")
author instructorProfile @relation(fields: [authorID],references:[id])
authorID Int
description String?
category String?
level String?
status Status? @default(BUILDING)
registedStudents User[] @relation(references: [id])
price Float @default(9.99)
priceSale Float @default(9.99)
picture String?
averageRating Float @default(0)
curriculum Curriculum?
comments Comment[]
totalPurchase Int @default(0)
totalRevenue Float @default(0)
forSearchEngines Float @default(0)
createdAt DateTime @default(now()) 
}

model Curriculum {
id Int @default(autoincrement()) @id
course Course @relation(fields: [courseID],references:[id])
courseID Int
chapters Chapter[] 
}

model Chapter {
id Int @default(autoincrement()) @id
curriculum Curriculum @relation(fields: [curriculumID],references:[id])
curriculumID Int
order Int
name String
lessons Lesson[]
}

model Comment {
id Int @default(autoincrement()) @id
user User @relation(fields: [userID],references:[id])
userID Int
course Course @relation(fields: [courseID],references:[id])
courseID Int
title String
text String
}

model Lesson {
id Int @default(autoincrement()) @id
order Int
name String
chapter Chapter @relation(fields: [chapterID],references:[id])
chapterID Int
video Video 
puzzles Puzzle[]
}

model Video {
id Int @default(autoincrement()) @id
vimeoID Int
duration Float
lesson Lesson @relation(fields: [lessonID],references:[id])
lessonID Int
}

model Puzzle {
  id Int @default(autoincrement()) @id
  lesson Lesson @relation(fields: [lessonID],references:[id])
  lessonID Int
  description String?
  fen String
  moves String[]
  helps String[]
}

enum Status {
BUILDING
VERIFYING
PUBLISH
UNPUBLISH
}

enum Title {
  GM
  IM
  FM
  WGM
  WIM
}
enum Role {
  ADMIN
  USER
}


